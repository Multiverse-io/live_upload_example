<h1>Basic Uploads Example</h1>
<details>
  <summary>The demo showcases the following features of live uploads:</summary>
  <ul>
    <li><code>allow_upload/3</code> specification</li>
    <li><code>live_file_input/1</code></li>
    <li><code>live_img_preview/2</code></li>
    <li><code>upload_errors/2</code></li>
    <li><code>entry.progress</code></li>
    <li><code>cancel_upload/3</code></li>
    <li><code>consume_uploaded_entries/3</code> on submit</li>
  </ul>
</details>

<section class="row upload-demo">
  <section class="column">

    <h2>Upload</h2>

    <%# you can reference the upload config to drive informational messages %>
    <p>You may add up to <%= @uploads.exhibit.max_entries %> exhibits at a time.</p>

    <%# this form contains the live_file_input - you must bind phx-change and phx-submit on the form %>
    <form id="basic-uploads-form" phx-change="validate" phx-submit="save">
      <%= live_file_input @uploads.exhibit %>
      <button type="submit" phx-disable-with="Uploading...">Upload</button>
    </form>

    <%# phx-drop-target on the element provides drag-and-drop %>
    <section class="pending-uploads" phx-drop-target="<%= @uploads.exhibit.ref %>" style="min-height: 100%;">

      <h3>Pending Uploads</h3>
      <p>You can drag and drop files here, too.</p>

      <%# this works around the missing "too many files" error %>
      <%= if error = DropsWeb.LiveUploadHelpers.upload_error(@uploads.exhibit) do %>
        <p class="alert alert-danger"><%= DropsWeb.LiveUploadHelpers.error_to_string(error) %></p>
      <% end %>
      <%# end work-around %>

    <%#
      the entries comprehension does the following:

        * invokes live_img_preview/2 which renders a client-side image preview

        * renders the client-side filename and upload `progress` for each entry

        * renders a link the user can click to to trigger the `cancel-upload` event for an entry

        * renders any existing errors for the entry

    %>
    <%= for entry <- @uploads.exhibit.entries do %>
      <div class="upload-entry">
        <%# render in-flight progress using the reactive `entry.progress` %>
        <progress value="<%= entry.progress %>" class="upload-entry__progress" id="<%= entry.ref %>-progress" max="100"> <%= entry.progress %>% </progress>

        <div class="upload-entry__details">
          <%# live_img_preview/2 uses an internal hook to render a client-side image preview %>
          <figure>
            <%= live_img_preview entry %>
            <figcaption><%= entry.client_name %> (<%= entry.client_size %>)</figcaption>
          </figure>

          <%# review the handle_event("cancel-upload") callback in the LiveView %>
          <a href="#" phx-click="cancel-upload" phx-value-ref="<%= entry.ref %>" class="upload-entry__cancel">&times;</a>
        </div>

      <%# upload_errors/2 returns error atoms per upload entry %>
      <%= for err <- upload_errors(@uploads.exhibit, entry) do %>
        <p class="alert alert-danger"><%= DropsWeb.LiveUploadHelpers.error_to_string(err) %></p>
      <% end %>

      </div>

    <% end %>
    </section>

  </section>

  <section class="column">
    <h2>My Exhibits</h2>

    <output form="basic-uploads-form" for="<%= @uploads.exhibit.ref %>"><%= for static_path <- @uploaded_files do %>
      <figure>
        <img src="<%= static_path %>" />
        <figcaption><%= static_path %></figcaption>
      </figure>
   <% end %></output>

  </section>

</section>
